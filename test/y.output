Terminals which are not used

   UMINUS


State 92 conflicts: 9 reduce/reduce


Grammar

    0 $accept: prog_start $end

    1 prog_start: Program

    2 Program: /* empty */
    3        | Function Program

    4 @1: /* empty */

    5 @2: /* empty */

    6 Function: FUNCTION IDENT @1 SEMICOLON BEGIN_PARAMS Declaration_loop @2 END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY Statement_loop END_BODY

    7 Declaration_loop: Declaration SEMICOLON Declaration_loop
    8                 | /* empty */

    9 Statement_loop: Statement SEMICOLON Statement_loop
   10               | /* empty */

   11 Declaration: Identifier_loop COLON Declaration_branch

   12 Identifier_loop: IDENT
   13                | IDENT COMMA Identifier_loop

   14 Declaration_branch: INTEGER
   15                   | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   16                   | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   17 Statement: Statement1
   18          | Statement2
   19          | Statement3
   20          | Statement4
   21          | Statement5
   22          | Statement6
   23          | Statement7
   24          | Statement8
   25          | Statement9

   26 Statement1: Var ASSIGN Expression

   27 @3: /* empty */

   28 Statement2: IF Bool_Expr THEN @3 Statement_loop ENDIF

   29 @4: /* empty */

   30 @5: /* empty */

   31 Statement2: IF Bool_Expr THEN @4 Statement_loop ELSE @5 Statement_loop ENDIF

   32 @6: /* empty */

   33 Statement3: WHILE Bool_Expr BEGINLOOP @6 Statement_loop ENDLOOP

   34 @7: /* empty */

   35 Statement4: DO BEGINLOOP @7 Statement_loop ENDLOOP WHILE Bool_Expr

   36 Statement5: FOR Var ASSIGN NUMBER SEMICOLON Bool_Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement_loop ENDLOOP

   37 Statement6: READ Var_loop

   38 Statement7: WRITE Var_loop

   39 Statement8: CONTINUE

   40 Statement9: RETURN Expression

   41 Var_loop: Var
   42         | Var COMMA Var_loop

   43 Bool_Expr: Relation_And_Expr
   44          | Bool_Expr OR Relation_And_Expr

   45 Relation_And_Expr: Relation_Expr
   46                  | Relation_And_Expr AND Relation_Expr

   47 Relation_Expr: Relation_Expr_branch
   48              | NOT Relation_Expr_branch

   49 Relation_Expr_branch: Expression Comp Expression
   50                     | TRUE
   51                     | FALSE
   52                     | L_PAREN Bool_Expr R_PAREN

   53 Comp: EQ
   54     | NEQ
   55     | LT
   56     | GT
   57     | LTE
   58     | GTE

   59 Expression: Expression ADD Multiplicative_Expr
   60           | Expression SUB Multiplicative_Expr
   61           | Multiplicative_Expr

   62 Multiplicative_Expr: Multiplicative_Expr MULT Term
   63                    | Multiplicative_Expr DIV Term
   64                    | Multiplicative_Expr MOD Term
   65                    | Term

   66 Term: SUB Term_branch
   67     | Term_branch
   68     | TermIdentifier

   69 Term_branch: Var
   70            | NUMBER
   71            | L_PAREN Expression R_PAREN

   72 TermIdentifier: IDENT L_PAREN TermExpression_loop R_PAREN
   73               | IDENT L_PAREN R_PAREN

   74 TermExpression_loop: Expression
   75                    | Expression COMMA TermExpression_loop

   76 Var: IDENT
   77    | IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET
   78    | IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET L_SQUARE_BRACKET Expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 6
BEGIN_PARAMS (259) 6
END_PARAMS (260) 6
BEGIN_LOCALS (261) 6
END_LOCALS (262) 6
BEGIN_BODY (263) 6
END_BODY (264) 6
INTEGER (265) 14 15 16
ARRAY (266) 15 16
OF (267) 15 16
IF (268) 28 31
THEN (269) 28 31
ENDIF (270) 28 31
ELSE (271) 31
WHILE (272) 33 35
DO (273) 35
FOR (274) 36
BEGINLOOP (275) 33 35 36
ENDLOOP (276) 33 35 36
CONTINUE (277) 39
READ (278) 37
WRITE (279) 38
AND (280) 46
OR (281) 44
NOT (282) 48
TRUE (283) 50
FALSE (284) 51
RETURN (285) 40
SUB (286) 60 66
ADD (287) 59
MULT (288) 62
DIV (289) 63
MOD (290) 64
UMINUS (291)
EQ (292) 53
NEQ (293) 54
LT (294) 55
GT (295) 56
LTE (296) 57
GTE (297) 58
NUMBER (298) 15 16 36 70
IDENT (299) 6 12 13 72 73 76 77 78
SEMICOLON (300) 6 7 9 36
COLON (301) 11
COMMA (302) 13 42 75
L_PAREN (303) 52 71 72 73
R_PAREN (304) 52 71 72 73
L_SQUARE_BRACKET (305) 15 16 77 78
R_SQUARE_BRACKET (306) 15 16 77 78
ASSIGN (307) 26 36


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
prog_start (54)
    on left: 1, on right: 0
Program (55)
    on left: 2 3, on right: 1 3
Function (56)
    on left: 6, on right: 3
@1 (57)
    on left: 4, on right: 6
@2 (58)
    on left: 5, on right: 6
Declaration_loop (59)
    on left: 7 8, on right: 6 7
Statement_loop (60)
    on left: 9 10, on right: 6 9 28 31 33 35 36
Declaration (61)
    on left: 11, on right: 7
Identifier_loop (62)
    on left: 12 13, on right: 11 13
Declaration_branch (63)
    on left: 14 15 16, on right: 11
Statement (64)
    on left: 17 18 19 20 21 22 23 24 25, on right: 9
Statement1 (65)
    on left: 26, on right: 17
Statement2 (66)
    on left: 28 31, on right: 18
@3 (67)
    on left: 27, on right: 28
@4 (68)
    on left: 29, on right: 31
@5 (69)
    on left: 30, on right: 31
Statement3 (70)
    on left: 33, on right: 19
@6 (71)
    on left: 32, on right: 33
Statement4 (72)
    on left: 35, on right: 20
@7 (73)
    on left: 34, on right: 35
Statement5 (74)
    on left: 36, on right: 21
Statement6 (75)
    on left: 37, on right: 22
Statement7 (76)
    on left: 38, on right: 23
Statement8 (77)
    on left: 39, on right: 24
Statement9 (78)
    on left: 40, on right: 25
Var_loop (79)
    on left: 41 42, on right: 37 38 42
Bool_Expr (80)
    on left: 43 44, on right: 28 31 33 35 36 44 52
Relation_And_Expr (81)
    on left: 45 46, on right: 43 44 46
Relation_Expr (82)
    on left: 47 48, on right: 45 46
Relation_Expr_branch (83)
    on left: 49 50 51 52, on right: 47 48
Comp (84)
    on left: 53 54 55 56 57 58, on right: 49
Expression (85)
    on left: 59 60 61, on right: 26 36 40 49 59 60 71 74 75 77 78
Multiplicative_Expr (86)
    on left: 62 63 64 65, on right: 59 60 61 62 63 64
Term (87)
    on left: 66 67 68, on right: 62 63 64 65
Term_branch (88)
    on left: 69 70 71, on right: 66 67
TermIdentifier (89)
    on left: 72 73, on right: 68
TermExpression_loop (90)
    on left: 74 75, on right: 72 75
Var (91)
    on left: 76 77 78, on right: 26 36 41 42 69


state 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Program)

    prog_start  go to state 2
    Program     go to state 3
    Function    go to state 4


state 1

    6 Function: FUNCTION . IDENT @1 SEMICOLON BEGIN_PARAMS Declaration_loop @2 END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY Statement_loop END_BODY

    IDENT  shift, and go to state 5


state 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 6


state 3

    1 prog_start: Program .

    $default  reduce using rule 1 (prog_start)


state 4

    3 Program: Function . Program

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Program)

    Program   go to state 7
    Function  go to state 4


state 5

    6 Function: FUNCTION IDENT . @1 SEMICOLON BEGIN_PARAMS Declaration_loop @2 END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY Statement_loop END_BODY

    $default  reduce using rule 4 (@1)

    @1  go to state 8


state 6

    0 $accept: prog_start $end .

    $default  accept


state 7

    3 Program: Function Program .

    $default  reduce using rule 3 (Program)


state 8

    6 Function: FUNCTION IDENT @1 . SEMICOLON BEGIN_PARAMS Declaration_loop @2 END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY Statement_loop END_BODY

    SEMICOLON  shift, and go to state 9


state 9

    6 Function: FUNCTION IDENT @1 SEMICOLON . BEGIN_PARAMS Declaration_loop @2 END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY Statement_loop END_BODY

    BEGIN_PARAMS  shift, and go to state 10


state 10

    6 Function: FUNCTION IDENT @1 SEMICOLON BEGIN_PARAMS . Declaration_loop @2 END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY Statement_loop END_BODY

    IDENT  shift, and go to state 11

    $default  reduce using rule 8 (Declaration_loop)

    Declaration_loop  go to state 12
    Declaration       go to state 13
    Identifier_loop   go to state 14


state 11

   12 Identifier_loop: IDENT .
   13                | IDENT . COMMA Identifier_loop

    COMMA  shift, and go to state 15

    $default  reduce using rule 12 (Identifier_loop)


state 12

    6 Function: FUNCTION IDENT @1 SEMICOLON BEGIN_PARAMS Declaration_loop . @2 END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY Statement_loop END_BODY

    $default  reduce using rule 5 (@2)

    @2  go to state 16


state 13

    7 Declaration_loop: Declaration . SEMICOLON Declaration_loop

    SEMICOLON  shift, and go to state 17


state 14

   11 Declaration: Identifier_loop . COLON Declaration_branch

    COLON  shift, and go to state 18


state 15

   13 Identifier_loop: IDENT COMMA . Identifier_loop

    IDENT  shift, and go to state 11

    Identifier_loop  go to state 19


state 16

    6 Function: FUNCTION IDENT @1 SEMICOLON BEGIN_PARAMS Declaration_loop @2 . END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY Statement_loop END_BODY

    END_PARAMS  shift, and go to state 20


state 17

    7 Declaration_loop: Declaration SEMICOLON . Declaration_loop

    IDENT  shift, and go to state 11

    $default  reduce using rule 8 (Declaration_loop)

    Declaration_loop  go to state 21
    Declaration       go to state 13
    Identifier_loop   go to state 14


state 18

   11 Declaration: Identifier_loop COLON . Declaration_branch

    INTEGER  shift, and go to state 22
    ARRAY    shift, and go to state 23

    Declaration_branch  go to state 24


state 19

   13 Identifier_loop: IDENT COMMA Identifier_loop .

    $default  reduce using rule 13 (Identifier_loop)


state 20

    6 Function: FUNCTION IDENT @1 SEMICOLON BEGIN_PARAMS Declaration_loop @2 END_PARAMS . BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY Statement_loop END_BODY

    BEGIN_LOCALS  shift, and go to state 25


state 21

    7 Declaration_loop: Declaration SEMICOLON Declaration_loop .

    $default  reduce using rule 7 (Declaration_loop)


state 22

   14 Declaration_branch: INTEGER .

    $default  reduce using rule 14 (Declaration_branch)


state 23

   15 Declaration_branch: ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   16                   | ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 26


state 24

   11 Declaration: Identifier_loop COLON Declaration_branch .

    $default  reduce using rule 11 (Declaration)


state 25

    6 Function: FUNCTION IDENT @1 SEMICOLON BEGIN_PARAMS Declaration_loop @2 END_PARAMS BEGIN_LOCALS . Declaration_loop END_LOCALS BEGIN_BODY Statement_loop END_BODY

    IDENT  shift, and go to state 11

    $default  reduce using rule 8 (Declaration_loop)

    Declaration_loop  go to state 27
    Declaration       go to state 13
    Identifier_loop   go to state 14


state 26

   15 Declaration_branch: ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER
   16                   | ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 28


state 27

    6 Function: FUNCTION IDENT @1 SEMICOLON BEGIN_PARAMS Declaration_loop @2 END_PARAMS BEGIN_LOCALS Declaration_loop . END_LOCALS BEGIN_BODY Statement_loop END_BODY

    END_LOCALS  shift, and go to state 29


state 28

   15 Declaration_branch: ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER
   16                   | ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 30


state 29

    6 Function: FUNCTION IDENT @1 SEMICOLON BEGIN_PARAMS Declaration_loop @2 END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS . BEGIN_BODY Statement_loop END_BODY

    BEGIN_BODY  shift, and go to state 31


state 30

   15 Declaration_branch: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER
   16                   | ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    OF                shift, and go to state 32
    L_SQUARE_BRACKET  shift, and go to state 33


state 31

    6 Function: FUNCTION IDENT @1 SEMICOLON BEGIN_PARAMS Declaration_loop @2 END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY . Statement_loop END_BODY

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    FOR       shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    $default  reduce using rule 10 (Statement_loop)

    Statement_loop  go to state 43
    Statement       go to state 44
    Statement1      go to state 45
    Statement2      go to state 46
    Statement3      go to state 47
    Statement4      go to state 48
    Statement5      go to state 49
    Statement6      go to state 50
    Statement7      go to state 51
    Statement8      go to state 52
    Statement9      go to state 53
    Var             go to state 54


state 32

   15 Declaration_branch: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 55


state 33

   16 Declaration_branch: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 56


state 34

   28 Statement2: IF . Bool_Expr THEN @3 Statement_loop ENDIF
   31           | IF . Bool_Expr THEN @4 Statement_loop ELSE @5 Statement_loop ENDIF

    NOT      shift, and go to state 57
    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    SUB      shift, and go to state 60
    NUMBER   shift, and go to state 61
    IDENT    shift, and go to state 62
    L_PAREN  shift, and go to state 63

    Bool_Expr             go to state 64
    Relation_And_Expr     go to state 65
    Relation_Expr         go to state 66
    Relation_Expr_branch  go to state 67
    Expression            go to state 68
    Multiplicative_Expr   go to state 69
    Term                  go to state 70
    Term_branch           go to state 71
    TermIdentifier        go to state 72
    Var                   go to state 73


state 35

   33 Statement3: WHILE . Bool_Expr BEGINLOOP @6 Statement_loop ENDLOOP

    NOT      shift, and go to state 57
    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    SUB      shift, and go to state 60
    NUMBER   shift, and go to state 61
    IDENT    shift, and go to state 62
    L_PAREN  shift, and go to state 63

    Bool_Expr             go to state 74
    Relation_And_Expr     go to state 65
    Relation_Expr         go to state 66
    Relation_Expr_branch  go to state 67
    Expression            go to state 68
    Multiplicative_Expr   go to state 69
    Term                  go to state 70
    Term_branch           go to state 71
    TermIdentifier        go to state 72
    Var                   go to state 73


state 36

   35 Statement4: DO . BEGINLOOP @7 Statement_loop ENDLOOP WHILE Bool_Expr

    BEGINLOOP  shift, and go to state 75


state 37

   36 Statement5: FOR . Var ASSIGN NUMBER SEMICOLON Bool_Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement_loop ENDLOOP

    IDENT  shift, and go to state 42

    Var  go to state 76


state 38

   39 Statement8: CONTINUE .

    $default  reduce using rule 39 (Statement8)


state 39

   37 Statement6: READ . Var_loop

    IDENT  shift, and go to state 42

    Var_loop  go to state 77
    Var       go to state 78


state 40

   38 Statement7: WRITE . Var_loop

    IDENT  shift, and go to state 42

    Var_loop  go to state 79
    Var       go to state 78


state 41

   40 Statement9: RETURN . Expression

    SUB      shift, and go to state 60
    NUMBER   shift, and go to state 61
    IDENT    shift, and go to state 62
    L_PAREN  shift, and go to state 80

    Expression           go to state 81
    Multiplicative_Expr  go to state 69
    Term                 go to state 70
    Term_branch          go to state 71
    TermIdentifier       go to state 72
    Var                  go to state 73


state 42

   76 Var: IDENT .
   77    | IDENT . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET
   78    | IDENT . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 82

    $default  reduce using rule 76 (Var)


state 43

    6 Function: FUNCTION IDENT @1 SEMICOLON BEGIN_PARAMS Declaration_loop @2 END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY Statement_loop . END_BODY

    END_BODY  shift, and go to state 83


state 44

    9 Statement_loop: Statement . SEMICOLON Statement_loop

    SEMICOLON  shift, and go to state 84


state 45

   17 Statement: Statement1 .

    $default  reduce using rule 17 (Statement)


state 46

   18 Statement: Statement2 .

    $default  reduce using rule 18 (Statement)


state 47

   19 Statement: Statement3 .

    $default  reduce using rule 19 (Statement)


state 48

   20 Statement: Statement4 .

    $default  reduce using rule 20 (Statement)


state 49

   21 Statement: Statement5 .

    $default  reduce using rule 21 (Statement)


state 50

   22 Statement: Statement6 .

    $default  reduce using rule 22 (Statement)


state 51

   23 Statement: Statement7 .

    $default  reduce using rule 23 (Statement)


state 52

   24 Statement: Statement8 .

    $default  reduce using rule 24 (Statement)


state 53

   25 Statement: Statement9 .

    $default  reduce using rule 25 (Statement)


state 54

   26 Statement1: Var . ASSIGN Expression

    ASSIGN  shift, and go to state 85


state 55

   15 Declaration_branch: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 15 (Declaration_branch)


state 56

   16 Declaration_branch: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 86


state 57

   48 Relation_Expr: NOT . Relation_Expr_branch

    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    SUB      shift, and go to state 60
    NUMBER   shift, and go to state 61
    IDENT    shift, and go to state 62
    L_PAREN  shift, and go to state 63

    Relation_Expr_branch  go to state 87
    Expression            go to state 68
    Multiplicative_Expr   go to state 69
    Term                  go to state 70
    Term_branch           go to state 71
    TermIdentifier        go to state 72
    Var                   go to state 73


state 58

   50 Relation_Expr_branch: TRUE .

    $default  reduce using rule 50 (Relation_Expr_branch)


state 59

   51 Relation_Expr_branch: FALSE .

    $default  reduce using rule 51 (Relation_Expr_branch)


state 60

   66 Term: SUB . Term_branch

    NUMBER   shift, and go to state 61
    IDENT    shift, and go to state 42
    L_PAREN  shift, and go to state 80

    Term_branch  go to state 88
    Var          go to state 73


state 61

   70 Term_branch: NUMBER .

    $default  reduce using rule 70 (Term_branch)


state 62

   72 TermIdentifier: IDENT . L_PAREN TermExpression_loop R_PAREN
   73               | IDENT . L_PAREN R_PAREN
   76 Var: IDENT .
   77    | IDENT . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET
   78    | IDENT . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 89
    L_SQUARE_BRACKET  shift, and go to state 82

    $default  reduce using rule 76 (Var)


state 63

   52 Relation_Expr_branch: L_PAREN . Bool_Expr R_PAREN
   71 Term_branch: L_PAREN . Expression R_PAREN

    NOT      shift, and go to state 57
    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    SUB      shift, and go to state 60
    NUMBER   shift, and go to state 61
    IDENT    shift, and go to state 62
    L_PAREN  shift, and go to state 63

    Bool_Expr             go to state 90
    Relation_And_Expr     go to state 65
    Relation_Expr         go to state 66
    Relation_Expr_branch  go to state 67
    Expression            go to state 91
    Multiplicative_Expr   go to state 69
    Term                  go to state 70
    Term_branch           go to state 71
    TermIdentifier        go to state 72
    Var                   go to state 73


state 64

   28 Statement2: IF Bool_Expr . THEN @3 Statement_loop ENDIF
   31           | IF Bool_Expr . THEN @4 Statement_loop ELSE @5 Statement_loop ENDIF
   44 Bool_Expr: Bool_Expr . OR Relation_And_Expr

    THEN  shift, and go to state 92
    OR    shift, and go to state 93


state 65

   43 Bool_Expr: Relation_And_Expr .
   46 Relation_And_Expr: Relation_And_Expr . AND Relation_Expr

    AND  shift, and go to state 94

    $default  reduce using rule 43 (Bool_Expr)


state 66

   45 Relation_And_Expr: Relation_Expr .

    $default  reduce using rule 45 (Relation_And_Expr)


state 67

   47 Relation_Expr: Relation_Expr_branch .

    $default  reduce using rule 47 (Relation_Expr)


state 68

   49 Relation_Expr_branch: Expression . Comp Expression
   59 Expression: Expression . ADD Multiplicative_Expr
   60           | Expression . SUB Multiplicative_Expr

    SUB  shift, and go to state 95
    ADD  shift, and go to state 96
    EQ   shift, and go to state 97
    NEQ  shift, and go to state 98
    LT   shift, and go to state 99
    GT   shift, and go to state 100
    LTE  shift, and go to state 101
    GTE  shift, and go to state 102

    Comp  go to state 103


state 69

   61 Expression: Multiplicative_Expr .
   62 Multiplicative_Expr: Multiplicative_Expr . MULT Term
   63                    | Multiplicative_Expr . DIV Term
   64                    | Multiplicative_Expr . MOD Term

    MULT  shift, and go to state 104
    DIV   shift, and go to state 105
    MOD   shift, and go to state 106

    $default  reduce using rule 61 (Expression)


state 70

   65 Multiplicative_Expr: Term .

    $default  reduce using rule 65 (Multiplicative_Expr)


state 71

   67 Term: Term_branch .

    $default  reduce using rule 67 (Term)


state 72

   68 Term: TermIdentifier .

    $default  reduce using rule 68 (Term)


state 73

   69 Term_branch: Var .

    $default  reduce using rule 69 (Term_branch)


state 74

   33 Statement3: WHILE Bool_Expr . BEGINLOOP @6 Statement_loop ENDLOOP
   44 Bool_Expr: Bool_Expr . OR Relation_And_Expr

    BEGINLOOP  shift, and go to state 107
    OR         shift, and go to state 93


state 75

   35 Statement4: DO BEGINLOOP . @7 Statement_loop ENDLOOP WHILE Bool_Expr

    $default  reduce using rule 34 (@7)

    @7  go to state 108


state 76

   36 Statement5: FOR Var . ASSIGN NUMBER SEMICOLON Bool_Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement_loop ENDLOOP

    ASSIGN  shift, and go to state 109


state 77

   37 Statement6: READ Var_loop .

    $default  reduce using rule 37 (Statement6)


state 78

   41 Var_loop: Var .
   42         | Var . COMMA Var_loop

    COMMA  shift, and go to state 110

    $default  reduce using rule 41 (Var_loop)


state 79

   38 Statement7: WRITE Var_loop .

    $default  reduce using rule 38 (Statement7)


state 80

   71 Term_branch: L_PAREN . Expression R_PAREN

    SUB      shift, and go to state 60
    NUMBER   shift, and go to state 61
    IDENT    shift, and go to state 62
    L_PAREN  shift, and go to state 80

    Expression           go to state 111
    Multiplicative_Expr  go to state 69
    Term                 go to state 70
    Term_branch          go to state 71
    TermIdentifier       go to state 72
    Var                  go to state 73


state 81

   40 Statement9: RETURN Expression .
   59 Expression: Expression . ADD Multiplicative_Expr
   60           | Expression . SUB Multiplicative_Expr

    SUB  shift, and go to state 95
    ADD  shift, and go to state 96

    $default  reduce using rule 40 (Statement9)


state 82

   77 Var: IDENT L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET
   78    | IDENT L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    SUB      shift, and go to state 60
    NUMBER   shift, and go to state 61
    IDENT    shift, and go to state 62
    L_PAREN  shift, and go to state 80

    Expression           go to state 112
    Multiplicative_Expr  go to state 69
    Term                 go to state 70
    Term_branch          go to state 71
    TermIdentifier       go to state 72
    Var                  go to state 73


state 83

    6 Function: FUNCTION IDENT @1 SEMICOLON BEGIN_PARAMS Declaration_loop @2 END_PARAMS BEGIN_LOCALS Declaration_loop END_LOCALS BEGIN_BODY Statement_loop END_BODY .

    $default  reduce using rule 6 (Function)


state 84

    9 Statement_loop: Statement SEMICOLON . Statement_loop

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    FOR       shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    $default  reduce using rule 10 (Statement_loop)

    Statement_loop  go to state 113
    Statement       go to state 44
    Statement1      go to state 45
    Statement2      go to state 46
    Statement3      go to state 47
    Statement4      go to state 48
    Statement5      go to state 49
    Statement6      go to state 50
    Statement7      go to state 51
    Statement8      go to state 52
    Statement9      go to state 53
    Var             go to state 54


state 85

   26 Statement1: Var ASSIGN . Expression

    SUB      shift, and go to state 60
    NUMBER   shift, and go to state 61
    IDENT    shift, and go to state 62
    L_PAREN  shift, and go to state 80

    Expression           go to state 114
    Multiplicative_Expr  go to state 69
    Term                 go to state 70
    Term_branch          go to state 71
    TermIdentifier       go to state 72
    Var                  go to state 73


state 86

   16 Declaration_branch: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 115


state 87

   48 Relation_Expr: NOT Relation_Expr_branch .

    $default  reduce using rule 48 (Relation_Expr)


state 88

   66 Term: SUB Term_branch .

    $default  reduce using rule 66 (Term)


state 89

   72 TermIdentifier: IDENT L_PAREN . TermExpression_loop R_PAREN
   73               | IDENT L_PAREN . R_PAREN

    SUB      shift, and go to state 60
    NUMBER   shift, and go to state 61
    IDENT    shift, and go to state 62
    L_PAREN  shift, and go to state 80
    R_PAREN  shift, and go to state 116

    Expression           go to state 117
    Multiplicative_Expr  go to state 69
    Term                 go to state 70
    Term_branch          go to state 71
    TermIdentifier       go to state 72
    TermExpression_loop  go to state 118
    Var                  go to state 73


state 90

   44 Bool_Expr: Bool_Expr . OR Relation_And_Expr
   52 Relation_Expr_branch: L_PAREN Bool_Expr . R_PAREN

    OR       shift, and go to state 93
    R_PAREN  shift, and go to state 119


state 91

   49 Relation_Expr_branch: Expression . Comp Expression
   59 Expression: Expression . ADD Multiplicative_Expr
   60           | Expression . SUB Multiplicative_Expr
   71 Term_branch: L_PAREN Expression . R_PAREN

    SUB      shift, and go to state 95
    ADD      shift, and go to state 96
    EQ       shift, and go to state 97
    NEQ      shift, and go to state 98
    LT       shift, and go to state 99
    GT       shift, and go to state 100
    LTE      shift, and go to state 101
    GTE      shift, and go to state 102
    R_PAREN  shift, and go to state 120

    Comp  go to state 103


state 92

   28 Statement2: IF Bool_Expr THEN . @3 Statement_loop ENDIF
   31           | IF Bool_Expr THEN . @4 Statement_loop ELSE @5 Statement_loop ENDIF

    IF        reduce using rule 27 (@3)
    IF        [reduce using rule 29 (@4)]
    ELSE      reduce using rule 29 (@4)
    WHILE     reduce using rule 27 (@3)
    WHILE     [reduce using rule 29 (@4)]
    DO        reduce using rule 27 (@3)
    DO        [reduce using rule 29 (@4)]
    FOR       reduce using rule 27 (@3)
    FOR       [reduce using rule 29 (@4)]
    CONTINUE  reduce using rule 27 (@3)
    CONTINUE  [reduce using rule 29 (@4)]
    READ      reduce using rule 27 (@3)
    READ      [reduce using rule 29 (@4)]
    WRITE     reduce using rule 27 (@3)
    WRITE     [reduce using rule 29 (@4)]
    RETURN    reduce using rule 27 (@3)
    RETURN    [reduce using rule 29 (@4)]
    IDENT     reduce using rule 27 (@3)
    IDENT     [reduce using rule 29 (@4)]
    $default  reduce using rule 27 (@3)

    @3  go to state 121
    @4  go to state 122


state 93

   44 Bool_Expr: Bool_Expr OR . Relation_And_Expr

    NOT      shift, and go to state 57
    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    SUB      shift, and go to state 60
    NUMBER   shift, and go to state 61
    IDENT    shift, and go to state 62
    L_PAREN  shift, and go to state 63

    Relation_And_Expr     go to state 123
    Relation_Expr         go to state 66
    Relation_Expr_branch  go to state 67
    Expression            go to state 68
    Multiplicative_Expr   go to state 69
    Term                  go to state 70
    Term_branch           go to state 71
    TermIdentifier        go to state 72
    Var                   go to state 73


state 94

   46 Relation_And_Expr: Relation_And_Expr AND . Relation_Expr

    NOT      shift, and go to state 57
    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    SUB      shift, and go to state 60
    NUMBER   shift, and go to state 61
    IDENT    shift, and go to state 62
    L_PAREN  shift, and go to state 63

    Relation_Expr         go to state 124
    Relation_Expr_branch  go to state 67
    Expression            go to state 68
    Multiplicative_Expr   go to state 69
    Term                  go to state 70
    Term_branch           go to state 71
    TermIdentifier        go to state 72
    Var                   go to state 73


state 95

   60 Expression: Expression SUB . Multiplicative_Expr

    SUB      shift, and go to state 60
    NUMBER   shift, and go to state 61
    IDENT    shift, and go to state 62
    L_PAREN  shift, and go to state 80

    Multiplicative_Expr  go to state 125
    Term                 go to state 70
    Term_branch          go to state 71
    TermIdentifier       go to state 72
    Var                  go to state 73


state 96

   59 Expression: Expression ADD . Multiplicative_Expr

    SUB      shift, and go to state 60
    NUMBER   shift, and go to state 61
    IDENT    shift, and go to state 62
    L_PAREN  shift, and go to state 80

    Multiplicative_Expr  go to state 126
    Term                 go to state 70
    Term_branch          go to state 71
    TermIdentifier       go to state 72
    Var                  go to state 73


state 97

   53 Comp: EQ .

    $default  reduce using rule 53 (Comp)


state 98

   54 Comp: NEQ .

    $default  reduce using rule 54 (Comp)


state 99

   55 Comp: LT .

    $default  reduce using rule 55 (Comp)


state 100

   56 Comp: GT .

    $default  reduce using rule 56 (Comp)


state 101

   57 Comp: LTE .

    $default  reduce using rule 57 (Comp)


state 102

   58 Comp: GTE .

    $default  reduce using rule 58 (Comp)


state 103

   49 Relation_Expr_branch: Expression Comp . Expression

    SUB      shift, and go to state 60
    NUMBER   shift, and go to state 61
    IDENT    shift, and go to state 62
    L_PAREN  shift, and go to state 80

    Expression           go to state 127
    Multiplicative_Expr  go to state 69
    Term                 go to state 70
    Term_branch          go to state 71
    TermIdentifier       go to state 72
    Var                  go to state 73


state 104

   62 Multiplicative_Expr: Multiplicative_Expr MULT . Term

    SUB      shift, and go to state 60
    NUMBER   shift, and go to state 61
    IDENT    shift, and go to state 62
    L_PAREN  shift, and go to state 80

    Term            go to state 128
    Term_branch     go to state 71
    TermIdentifier  go to state 72
    Var             go to state 73


state 105

   63 Multiplicative_Expr: Multiplicative_Expr DIV . Term

    SUB      shift, and go to state 60
    NUMBER   shift, and go to state 61
    IDENT    shift, and go to state 62
    L_PAREN  shift, and go to state 80

    Term            go to state 129
    Term_branch     go to state 71
    TermIdentifier  go to state 72
    Var             go to state 73


state 106

   64 Multiplicative_Expr: Multiplicative_Expr MOD . Term

    SUB      shift, and go to state 60
    NUMBER   shift, and go to state 61
    IDENT    shift, and go to state 62
    L_PAREN  shift, and go to state 80

    Term            go to state 130
    Term_branch     go to state 71
    TermIdentifier  go to state 72
    Var             go to state 73


state 107

   33 Statement3: WHILE Bool_Expr BEGINLOOP . @6 Statement_loop ENDLOOP

    $default  reduce using rule 32 (@6)

    @6  go to state 131


state 108

   35 Statement4: DO BEGINLOOP @7 . Statement_loop ENDLOOP WHILE Bool_Expr

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    FOR       shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    $default  reduce using rule 10 (Statement_loop)

    Statement_loop  go to state 132
    Statement       go to state 44
    Statement1      go to state 45
    Statement2      go to state 46
    Statement3      go to state 47
    Statement4      go to state 48
    Statement5      go to state 49
    Statement6      go to state 50
    Statement7      go to state 51
    Statement8      go to state 52
    Statement9      go to state 53
    Var             go to state 54


state 109

   36 Statement5: FOR Var ASSIGN . NUMBER SEMICOLON Bool_Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement_loop ENDLOOP

    NUMBER  shift, and go to state 133


state 110

   42 Var_loop: Var COMMA . Var_loop

    IDENT  shift, and go to state 42

    Var_loop  go to state 134
    Var       go to state 78


state 111

   59 Expression: Expression . ADD Multiplicative_Expr
   60           | Expression . SUB Multiplicative_Expr
   71 Term_branch: L_PAREN Expression . R_PAREN

    SUB      shift, and go to state 95
    ADD      shift, and go to state 96
    R_PAREN  shift, and go to state 120


state 112

   59 Expression: Expression . ADD Multiplicative_Expr
   60           | Expression . SUB Multiplicative_Expr
   77 Var: IDENT L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET
   78    | IDENT L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    SUB               shift, and go to state 95
    ADD               shift, and go to state 96
    R_SQUARE_BRACKET  shift, and go to state 135


state 113

    9 Statement_loop: Statement SEMICOLON Statement_loop .

    $default  reduce using rule 9 (Statement_loop)


state 114

   26 Statement1: Var ASSIGN Expression .
   59 Expression: Expression . ADD Multiplicative_Expr
   60           | Expression . SUB Multiplicative_Expr

    SUB  shift, and go to state 95
    ADD  shift, and go to state 96

    $default  reduce using rule 26 (Statement1)


state 115

   16 Declaration_branch: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 136


state 116

   73 TermIdentifier: IDENT L_PAREN R_PAREN .

    $default  reduce using rule 73 (TermIdentifier)


state 117

   59 Expression: Expression . ADD Multiplicative_Expr
   60           | Expression . SUB Multiplicative_Expr
   74 TermExpression_loop: Expression .
   75                    | Expression . COMMA TermExpression_loop

    SUB    shift, and go to state 95
    ADD    shift, and go to state 96
    COMMA  shift, and go to state 137

    $default  reduce using rule 74 (TermExpression_loop)


state 118

   72 TermIdentifier: IDENT L_PAREN TermExpression_loop . R_PAREN

    R_PAREN  shift, and go to state 138


state 119

   52 Relation_Expr_branch: L_PAREN Bool_Expr R_PAREN .

    $default  reduce using rule 52 (Relation_Expr_branch)


state 120

   71 Term_branch: L_PAREN Expression R_PAREN .

    $default  reduce using rule 71 (Term_branch)


state 121

   28 Statement2: IF Bool_Expr THEN @3 . Statement_loop ENDIF

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    FOR       shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    $default  reduce using rule 10 (Statement_loop)

    Statement_loop  go to state 139
    Statement       go to state 44
    Statement1      go to state 45
    Statement2      go to state 46
    Statement3      go to state 47
    Statement4      go to state 48
    Statement5      go to state 49
    Statement6      go to state 50
    Statement7      go to state 51
    Statement8      go to state 52
    Statement9      go to state 53
    Var             go to state 54


state 122

   31 Statement2: IF Bool_Expr THEN @4 . Statement_loop ELSE @5 Statement_loop ENDIF

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    FOR       shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    $default  reduce using rule 10 (Statement_loop)

    Statement_loop  go to state 140
    Statement       go to state 44
    Statement1      go to state 45
    Statement2      go to state 46
    Statement3      go to state 47
    Statement4      go to state 48
    Statement5      go to state 49
    Statement6      go to state 50
    Statement7      go to state 51
    Statement8      go to state 52
    Statement9      go to state 53
    Var             go to state 54


state 123

   44 Bool_Expr: Bool_Expr OR Relation_And_Expr .
   46 Relation_And_Expr: Relation_And_Expr . AND Relation_Expr

    AND  shift, and go to state 94

    $default  reduce using rule 44 (Bool_Expr)


state 124

   46 Relation_And_Expr: Relation_And_Expr AND Relation_Expr .

    $default  reduce using rule 46 (Relation_And_Expr)


state 125

   60 Expression: Expression SUB Multiplicative_Expr .
   62 Multiplicative_Expr: Multiplicative_Expr . MULT Term
   63                    | Multiplicative_Expr . DIV Term
   64                    | Multiplicative_Expr . MOD Term

    MULT  shift, and go to state 104
    DIV   shift, and go to state 105
    MOD   shift, and go to state 106

    $default  reduce using rule 60 (Expression)


state 126

   59 Expression: Expression ADD Multiplicative_Expr .
   62 Multiplicative_Expr: Multiplicative_Expr . MULT Term
   63                    | Multiplicative_Expr . DIV Term
   64                    | Multiplicative_Expr . MOD Term

    MULT  shift, and go to state 104
    DIV   shift, and go to state 105
    MOD   shift, and go to state 106

    $default  reduce using rule 59 (Expression)


state 127

   49 Relation_Expr_branch: Expression Comp Expression .
   59 Expression: Expression . ADD Multiplicative_Expr
   60           | Expression . SUB Multiplicative_Expr

    SUB  shift, and go to state 95
    ADD  shift, and go to state 96

    $default  reduce using rule 49 (Relation_Expr_branch)


state 128

   62 Multiplicative_Expr: Multiplicative_Expr MULT Term .

    $default  reduce using rule 62 (Multiplicative_Expr)


state 129

   63 Multiplicative_Expr: Multiplicative_Expr DIV Term .

    $default  reduce using rule 63 (Multiplicative_Expr)


state 130

   64 Multiplicative_Expr: Multiplicative_Expr MOD Term .

    $default  reduce using rule 64 (Multiplicative_Expr)


state 131

   33 Statement3: WHILE Bool_Expr BEGINLOOP @6 . Statement_loop ENDLOOP

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    FOR       shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    $default  reduce using rule 10 (Statement_loop)

    Statement_loop  go to state 141
    Statement       go to state 44
    Statement1      go to state 45
    Statement2      go to state 46
    Statement3      go to state 47
    Statement4      go to state 48
    Statement5      go to state 49
    Statement6      go to state 50
    Statement7      go to state 51
    Statement8      go to state 52
    Statement9      go to state 53
    Var             go to state 54


state 132

   35 Statement4: DO BEGINLOOP @7 Statement_loop . ENDLOOP WHILE Bool_Expr

    ENDLOOP  shift, and go to state 142


state 133

   36 Statement5: FOR Var ASSIGN NUMBER . SEMICOLON Bool_Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement_loop ENDLOOP

    SEMICOLON  shift, and go to state 143


state 134

   42 Var_loop: Var COMMA Var_loop .

    $default  reduce using rule 42 (Var_loop)


state 135

   77 Var: IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET .
   78    | IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 144

    $default  reduce using rule 77 (Var)


state 136

   16 Declaration_branch: ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 16 (Declaration_branch)


state 137

   75 TermExpression_loop: Expression COMMA . TermExpression_loop

    SUB      shift, and go to state 60
    NUMBER   shift, and go to state 61
    IDENT    shift, and go to state 62
    L_PAREN  shift, and go to state 80

    Expression           go to state 117
    Multiplicative_Expr  go to state 69
    Term                 go to state 70
    Term_branch          go to state 71
    TermIdentifier       go to state 72
    TermExpression_loop  go to state 145
    Var                  go to state 73


state 138

   72 TermIdentifier: IDENT L_PAREN TermExpression_loop R_PAREN .

    $default  reduce using rule 72 (TermIdentifier)


state 139

   28 Statement2: IF Bool_Expr THEN @3 Statement_loop . ENDIF

    ENDIF  shift, and go to state 146


state 140

   31 Statement2: IF Bool_Expr THEN @4 Statement_loop . ELSE @5 Statement_loop ENDIF

    ELSE  shift, and go to state 147


state 141

   33 Statement3: WHILE Bool_Expr BEGINLOOP @6 Statement_loop . ENDLOOP

    ENDLOOP  shift, and go to state 148


state 142

   35 Statement4: DO BEGINLOOP @7 Statement_loop ENDLOOP . WHILE Bool_Expr

    WHILE  shift, and go to state 149


state 143

   36 Statement5: FOR Var ASSIGN NUMBER SEMICOLON . Bool_Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement_loop ENDLOOP

    NOT      shift, and go to state 57
    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    SUB      shift, and go to state 60
    NUMBER   shift, and go to state 61
    IDENT    shift, and go to state 62
    L_PAREN  shift, and go to state 63

    Bool_Expr             go to state 150
    Relation_And_Expr     go to state 65
    Relation_Expr         go to state 66
    Relation_Expr_branch  go to state 67
    Expression            go to state 68
    Multiplicative_Expr   go to state 69
    Term                  go to state 70
    Term_branch           go to state 71
    TermIdentifier        go to state 72
    Var                   go to state 73


state 144

   78 Var: IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET

    SUB      shift, and go to state 60
    NUMBER   shift, and go to state 61
    IDENT    shift, and go to state 62
    L_PAREN  shift, and go to state 80

    Expression           go to state 151
    Multiplicative_Expr  go to state 69
    Term                 go to state 70
    Term_branch          go to state 71
    TermIdentifier       go to state 72
    Var                  go to state 73


state 145

   75 TermExpression_loop: Expression COMMA TermExpression_loop .

    $default  reduce using rule 75 (TermExpression_loop)


state 146

   28 Statement2: IF Bool_Expr THEN @3 Statement_loop ENDIF .

    $default  reduce using rule 28 (Statement2)


state 147

   31 Statement2: IF Bool_Expr THEN @4 Statement_loop ELSE . @5 Statement_loop ENDIF

    $default  reduce using rule 30 (@5)

    @5  go to state 152


state 148

   33 Statement3: WHILE Bool_Expr BEGINLOOP @6 Statement_loop ENDLOOP .

    $default  reduce using rule 33 (Statement3)


state 149

   35 Statement4: DO BEGINLOOP @7 Statement_loop ENDLOOP WHILE . Bool_Expr

    NOT      shift, and go to state 57
    TRUE     shift, and go to state 58
    FALSE    shift, and go to state 59
    SUB      shift, and go to state 60
    NUMBER   shift, and go to state 61
    IDENT    shift, and go to state 62
    L_PAREN  shift, and go to state 63

    Bool_Expr             go to state 153
    Relation_And_Expr     go to state 65
    Relation_Expr         go to state 66
    Relation_Expr_branch  go to state 67
    Expression            go to state 68
    Multiplicative_Expr   go to state 69
    Term                  go to state 70
    Term_branch           go to state 71
    TermIdentifier        go to state 72
    Var                   go to state 73


state 150

   36 Statement5: FOR Var ASSIGN NUMBER SEMICOLON Bool_Expr . SEMICOLON Var ASSIGN Expression BEGINLOOP Statement_loop ENDLOOP
   44 Bool_Expr: Bool_Expr . OR Relation_And_Expr

    OR         shift, and go to state 93
    SEMICOLON  shift, and go to state 154


state 151

   59 Expression: Expression . ADD Multiplicative_Expr
   60           | Expression . SUB Multiplicative_Expr
   78 Var: IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET

    SUB               shift, and go to state 95
    ADD               shift, and go to state 96
    R_SQUARE_BRACKET  shift, and go to state 155


state 152

   31 Statement2: IF Bool_Expr THEN @4 Statement_loop ELSE @5 . Statement_loop ENDIF

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    FOR       shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    $default  reduce using rule 10 (Statement_loop)

    Statement_loop  go to state 156
    Statement       go to state 44
    Statement1      go to state 45
    Statement2      go to state 46
    Statement3      go to state 47
    Statement4      go to state 48
    Statement5      go to state 49
    Statement6      go to state 50
    Statement7      go to state 51
    Statement8      go to state 52
    Statement9      go to state 53
    Var             go to state 54


state 153

   35 Statement4: DO BEGINLOOP @7 Statement_loop ENDLOOP WHILE Bool_Expr .
   44 Bool_Expr: Bool_Expr . OR Relation_And_Expr

    OR  shift, and go to state 93

    $default  reduce using rule 35 (Statement4)


state 154

   36 Statement5: FOR Var ASSIGN NUMBER SEMICOLON Bool_Expr SEMICOLON . Var ASSIGN Expression BEGINLOOP Statement_loop ENDLOOP

    IDENT  shift, and go to state 42

    Var  go to state 157


state 155

   78 Var: IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET L_SQUARE_BRACKET Expression R_SQUARE_BRACKET .

    $default  reduce using rule 78 (Var)


state 156

   31 Statement2: IF Bool_Expr THEN @4 Statement_loop ELSE @5 Statement_loop . ENDIF

    ENDIF  shift, and go to state 158


state 157

   36 Statement5: FOR Var ASSIGN NUMBER SEMICOLON Bool_Expr SEMICOLON Var . ASSIGN Expression BEGINLOOP Statement_loop ENDLOOP

    ASSIGN  shift, and go to state 159


state 158

   31 Statement2: IF Bool_Expr THEN @4 Statement_loop ELSE @5 Statement_loop ENDIF .

    $default  reduce using rule 31 (Statement2)


state 159

   36 Statement5: FOR Var ASSIGN NUMBER SEMICOLON Bool_Expr SEMICOLON Var ASSIGN . Expression BEGINLOOP Statement_loop ENDLOOP

    SUB      shift, and go to state 60
    NUMBER   shift, and go to state 61
    IDENT    shift, and go to state 62
    L_PAREN  shift, and go to state 80

    Expression           go to state 160
    Multiplicative_Expr  go to state 69
    Term                 go to state 70
    Term_branch          go to state 71
    TermIdentifier       go to state 72
    Var                  go to state 73


state 160

   36 Statement5: FOR Var ASSIGN NUMBER SEMICOLON Bool_Expr SEMICOLON Var ASSIGN Expression . BEGINLOOP Statement_loop ENDLOOP
   59 Expression: Expression . ADD Multiplicative_Expr
   60           | Expression . SUB Multiplicative_Expr

    BEGINLOOP  shift, and go to state 161
    SUB        shift, and go to state 95
    ADD        shift, and go to state 96


state 161

   36 Statement5: FOR Var ASSIGN NUMBER SEMICOLON Bool_Expr SEMICOLON Var ASSIGN Expression BEGINLOOP . Statement_loop ENDLOOP

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    FOR       shift, and go to state 37
    CONTINUE  shift, and go to state 38
    READ      shift, and go to state 39
    WRITE     shift, and go to state 40
    RETURN    shift, and go to state 41
    IDENT     shift, and go to state 42

    $default  reduce using rule 10 (Statement_loop)

    Statement_loop  go to state 162
    Statement       go to state 44
    Statement1      go to state 45
    Statement2      go to state 46
    Statement3      go to state 47
    Statement4      go to state 48
    Statement5      go to state 49
    Statement6      go to state 50
    Statement7      go to state 51
    Statement8      go to state 52
    Statement9      go to state 53
    Var             go to state 54


state 162

   36 Statement5: FOR Var ASSIGN NUMBER SEMICOLON Bool_Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement_loop . ENDLOOP

    ENDLOOP  shift, and go to state 163


state 163

   36 Statement5: FOR Var ASSIGN NUMBER SEMICOLON Bool_Expr SEMICOLON Var ASSIGN Expression BEGINLOOP Statement_loop ENDLOOP .

    $default  reduce using rule 36 (Statement5)
